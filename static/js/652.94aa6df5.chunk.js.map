{"version":3,"file":"static/js/652.94aa6df5.chunk.js","mappings":"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","sources":["components/ErrorScreen/ErrorScreen.styled.jsx","components/ErrorScreen/ErrorScreen.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorScreenStyled = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ErrorScreenHeading = styled.h1`\n  color: #d33a3a;\n`;\n\nexport const ErrorScreenDescription = styled.p`\n  color: white;\n`;\n","import {\n  ErrorScreenStyled,\n  ErrorScreenHeading,\n  ErrorScreenDescription,\n} from './ErrorScreen.styled';\n\nconst ErrorScreen = ({ error }) => {\n  return (\n    <ErrorScreenStyled>\n      <ErrorScreenHeading>\n        The error has occured. Please try reloading the page...\n      </ErrorScreenHeading>\n      <ErrorScreenDescription>Error info: {error}</ErrorScreenDescription>\n    </ErrorScreenStyled>\n  );\n};\n\nexport default ErrorScreen;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  margin-top: 80px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n    gap: 30px;\n    margin-top: 140px;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media (min-width: 1750px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const MoviesListItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  text-decoration: none;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const MoviesPoster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MoviesTitle = styled.h2`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  color: var(--color-text);\n  padding: 13px;\n  font-size: 16px;\n  background-color: #01000adb;\n  backdrop-filter: blur(15px);\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport {\n  StyledMoviesList,\n  MoviesListItem,\n  MoviesPoster,\n  MoviesTitle,\n} from './MoviesList.styled';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w400/';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledMoviesList>\n      {movies.map(({ id, poster_path, title, original_title }) => (\n        <MoviesListItem\n          key={id}\n          state={{ from: location }}\n          to={`/movies/${id}`}\n        >\n          <MoviesPoster\n            src={\n              poster_path\n                ? IMAGES_BASE_URL + poster_path\n                : require('../../media/no-image-placeholder.png')\n            }\n            loading=\"lazy\"\n            alt={title ? title : original_title}\n          />\n          {<MoviesTitle>{title ? title : original_title}</MoviesTitle>}\n        </MoviesListItem>\n      ))}\n    </StyledMoviesList>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n  width: 90%;\n  margin: 0 auto 30px auto;\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection>{props.children}</StyledSection>;\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, 0);\n  border-radius: 50px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  width: 55px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: none;\n  outline: none;\n  background-color: var(--color-accent);\n  color: var(--color-text);\n  border-radius: 50px;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  width: 700px;\n  border: none;\n  outline: none;\n  padding: 15px 15px 15px 65px;\n  background-color: var(--color-primary);\n  font-size: 20px;\n  color: var(--color-text);\n`;\n","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport { Form, Button, Input } from './Search.styled';\n\nconst Search = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizedQuery = query.toLowerCase().trim();\n\n    if (normalizedQuery === '') {\n      return toast.info(\"Please enter the movie you're looking for\", {\n        theme: 'dark',\n      });\n    }\n    onSubmit(normalizedQuery);\n    setQuery('');\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Button type=\"submit\" aria-label=\"Search\" className=\"button\">\n        <BiSearchAlt2 style={{ width: 25, height: 25 }} />\n      </Button>\n\n      <Input\n        className=\"input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies...\"\n        value={query}\n        onChange={handleChange}\n      />\n    </Form>\n  );\n};\n\nexport default Search;\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Section } from 'components/Section/Section';\nimport PageTitle from '../components/PageTitle/PageTitle';\nimport Search from '../components/Search/Search';\nimport { getSearchedMovies } from '../services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\nimport ErrorScreen from '../components/ErrorScreen/ErrorScreen';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (query) {\n      const fetchSearchedMovies = async () => {\n        try {\n          setIsLoading(true);\n          const data = await getSearchedMovies(query);\n          setSearchedMovies(data);\n          if (data.length === 0) {\n            return toast.info('No movies found', {\n              theme: 'dark',\n            });\n          }\n        } catch (error) {\n          toast.error('The error has occured. Error info: ', error, {\n            theme: 'dark',\n          });\n          console.log(error);\n          return setError(error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchSearchedMovies();\n    }\n  }, [query]);\n\n  const onSumbit = query => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <Section>\n        <PageTitle title=\"Search Movies\" />\n      </Section>\n      <Section>\n        <Search onSubmit={onSumbit} />\n      </Section>\n      {isLoading && <Loader />}\n      {error && <ErrorScreen error={error} />}\n      {!error && (\n        <Section>\n          <MoviesList movies={searchedMovies} />\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'a686af912263638c370a0fbfc3731476';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ErrorScreenStyled","styled","ErrorScreenHeading","ErrorScreenDescription","error","StyledMoviesList","MoviesListItem","Link","MoviesPoster","MoviesTitle","movies","location","useLocation","map","id","poster_path","title","original_title","state","from","to","src","require","loading","alt","StyledSection","Section","props","children","Form","Button","Input","onSubmit","useState","query","setQuery","event","preventDefault","normalizedQuery","toLowerCase","trim","toast","theme","type","className","style","width","height","autoComplete","autoFocus","placeholder","value","onChange","e","target","useSearchParams","searchParams","setSearchParams","get","searchedMovies","setSearchedMovies","isLoading","setIsLoading","setError","useEffect","fetchSearchedMovies","getSearchedMovies","data","length","console","log","PageTitle","Loader","ErrorScreen","MoviesList","API_KEY","axios","getTrendingMovies","response","results","getMovieInfo","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}