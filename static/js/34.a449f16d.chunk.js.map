{"version":3,"file":"static/js/34.a449f16d.chunk.js","mappings":"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","sources":["components/ErrorScreen/ErrorScreen.styled.jsx","components/ErrorScreen/ErrorScreen.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/MoviePage/MoviePage.styled.jsx","components/MoviePage/MoviePage.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorScreenStyled = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ErrorScreenHeading = styled.h1`\n  color: #d33a3a;\n`;\n\nexport const ErrorScreenDescription = styled.p`\n  color: white;\n`;\n","import {\n  ErrorScreenStyled,\n  ErrorScreenHeading,\n  ErrorScreenDescription,\n} from './ErrorScreen.styled';\n\nconst ErrorScreen = ({ error }) => {\n  return (\n    <ErrorScreenStyled>\n      <ErrorScreenHeading>\n        The error has occured. Please try reloading the page...\n      </ErrorScreenHeading>\n      <ErrorScreenDescription>Error info: {error}</ErrorScreenDescription>\n    </ErrorScreenStyled>\n  );\n};\n\nexport default ErrorScreen;\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n  width: 90%;\n  margin: 0 auto 30px auto;\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection>{props.children}</StyledSection>;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieInfoSection = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 20px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 50px;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 70%;\n  border-radius: 10px;\n  margin: auto;\n\n  @media (min-width: 768px) {\n    width: auto;\n    height: 80vh;\n    margin: 0;\n  }\n`;\n\nexport const MovieDetails = styled.div`\n  width: 100%;\n  color: var(--color-text);\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    width: 1200px;\n  }\n`;\n\nexport const Subheading = styled.h2`\n  font-size: 30px;\n\n  @media (min-width: 1200px) {\n    font-size: 37px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 15px 0;\n  font-size: 18px;\n  padding: 8px 10px 15px 10px;\n  border-bottom: 2px solid var(--color-primary);\n`;\n\nexport const MovieAdditionalDetails = styled.div`\n  width: 100%;\n  overflow: hidden auto;\n  border-radius: 15px;\n  background-color: var(--color-secondary);\n  color: var(--color-text);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n\n  ::-webkit-scrollbar {\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-accent);\n  }\n\n  @media (min-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  color: var(--color-text);\n  text-decoration: none;\n  background-color: var(--color-primary);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n","import { Suspense, useRef } from 'react';\nimport { useLocation, Outlet } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { Section } from 'components/Section/Section';\nimport {\n  MovieInfoSection,\n  MoviePoster,\n  MovieDetails,\n  Subheading,\n  Text,\n  MovieAdditionalDetails,\n  BackButton,\n} from './MoviePage.styled';\nimport PageTitle from 'components/PageTitle/PageTitle';\nimport { StyledNav, StyledNavLink } from '../Header/Header.styled';\nimport Loader from '../Loader/Loader';\n\nconst MoviePage = ({ movieInfo }) => {\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  const { poster_path, title, original_title, vote_average, overview, genres } =\n    movieInfo;\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <Section>\n        <BackButton to={backLinkRef.current}>â¨ž Go back</BackButton>\n      </Section>\n      <Section>\n        <MovieInfoSection>\n          <MoviePoster\n            src={\n              poster_path\n                ? IMAGES_BASE_URL + poster_path\n                : require('../../media/no-image-placeholder.png')\n            }\n            alt={title}\n          />\n          <MovieDetails>\n            <PageTitle title={title ? title : original_title} />\n            <Text>User score: {Math.round(vote_average * 10) / 10}</Text>\n            <Subheading>Overview</Subheading>\n            <Text>{overview ? overview : 'No overview yet...'}</Text>\n            <Subheading>Genres</Subheading>\n            <Text>{genres && genres.map(genre => genre.name).join(', ')}</Text>\n            <MovieAdditionalDetails>\n              <Subheading>\n                Details about <i>{title ? title : original_title}</i>\n              </Subheading>\n              <StyledNav>\n                <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n                <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n              </StyledNav>\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </MovieAdditionalDetails>\n          </MovieDetails>\n        </MovieInfoSection>\n      </Section>\n    </>\n  );\n};\n\nexport default MoviePage;\n\nMoviePage.propTypes = {\n  movieInfo: PropTypes.object,\n  Outlet: PropTypes.element,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { getMovieInfo } from '../services/api';\nimport MoviePage from 'components/MoviePage/MoviePage';\nimport Loader from '../components/Loader/Loader';\nimport ErrorScreen from '../components/ErrorScreen/ErrorScreen';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieInfo, setMovieInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieInfo = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieInfo(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        toast.error('The error has occured. Error info: ', error, {\n          theme: 'dark',\n        });\n        console.log(error);\n        return setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <ErrorScreen error={error} />}\n      {!error && !isLoading && <MoviePage movieInfo={movieInfo} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a686af912263638c370a0fbfc3731476';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ErrorScreenStyled","styled","ErrorScreenHeading","ErrorScreenDescription","error","StyledSection","Section","props","children","MovieInfoSection","MoviePoster","MovieDetails","Subheading","Text","MovieAdditionalDetails","BackButton","Link","movieInfo","poster_path","title","original_title","vote_average","overview","genres","location","useLocation","backLinkRef","useRef","state","from","to","current","src","require","alt","PageTitle","Math","round","map","genre","name","join","Suspense","fallback","Loader","movieId","useParams","useState","setMovieInfo","isLoading","setIsLoading","setError","useEffect","fetchMovieInfo","getMovieInfo","data","toast","theme","console","log","ErrorScreen","API_KEY","axios","getTrendingMovies","response","results","getMovieCast","cast","getMovieReviews","getSearchedMovies","query"],"sourceRoot":""}