{"version":3,"file":"static/js/415.673f11af.chunk.js","mappings":"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","sources":["components/ErrorScreen/ErrorScreen.styled.jsx","components/ErrorScreen/ErrorScreen.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorScreenStyled = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ErrorScreenHeading = styled.h1`\n  color: #d33a3a;\n`;\n\nexport const ErrorScreenDescription = styled.p`\n  color: white;\n`;\n","import {\n  ErrorScreenStyled,\n  ErrorScreenHeading,\n  ErrorScreenDescription,\n} from './ErrorScreen.styled';\nimport { PropTypes } from 'prop-types';\n\nconst ErrorScreen = ({ error }) => {\n  return (\n    <ErrorScreenStyled>\n      <ErrorScreenHeading>\n        The error has occured. Please try reloading the page...\n      </ErrorScreenHeading>\n      <ErrorScreenDescription>Error info: {error}</ErrorScreenDescription>\n    </ErrorScreenStyled>\n  );\n};\n\nexport default ErrorScreen;\n\nErrorScreen.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  margin-top: 80px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n    gap: 30px;\n    margin-top: 140px;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media (min-width: 1750px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const MoviesListItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  text-decoration: none;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const MoviesPoster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MoviesTitle = styled.h2`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  color: var(--color-text);\n  padding: 13px;\n  font-size: 16px;\n  background-color: #01000adb;\n  backdrop-filter: blur(15px);\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport {\n  StyledMoviesList,\n  MoviesListItem,\n  MoviesPoster,\n  MoviesTitle,\n} from './MoviesList.styled';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w400/';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledMoviesList>\n      {movies.map(({ id, poster_path, title, original_title }) => (\n        <MoviesListItem\n          key={id}\n          state={{ from: location }}\n          to={`/movies/${id}`}\n        >\n          <MoviesPoster\n            src={\n              poster_path\n                ? IMAGES_BASE_URL + poster_path\n                : require('../../media/no-image-placeholder.png')\n            }\n            loading=\"lazy\"\n            alt={title ? title : original_title}\n          />\n          {<MoviesTitle>{title ? title : original_title}</MoviesTitle>}\n        </MoviesListItem>\n      ))}\n    </StyledMoviesList>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n  width: 90%;\n  margin: 0 auto 30px auto;\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection>{props.children}</StyledSection>;\n};\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../services/api';\nimport { toast } from 'react-toastify';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport PageTitle from 'components/PageTitle/PageTitle';\nimport { Section } from 'components/Section/Section';\nimport Loader from 'components/Loader/Loader';\nimport ErrorScreen from 'components/ErrorScreen/ErrorScreen';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies();\n  }, []);\n\n  const fetchTrendingMovies = async () => {\n    try {\n      setIsLoading(true);\n      const data = await getTrendingMovies();\n      setTrendingMovies(data);\n    } catch (error) {\n      toast.error('The error has occured. Error info: ', error, {\n        theme: 'dark',\n      });\n      console.log(error);\n      return setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <PageTitle title=\"Trending Today\" />\n      </Section>\n      {isLoading && <Loader />}\n      {error && <ErrorScreen error={error} />}\n      <Section>\n        {!error && trendingMovies.length > 0 && (\n          <MoviesList movies={trendingMovies} />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'a686af912263638c370a0fbfc3731476';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ErrorScreenStyled","styled","ErrorScreenHeading","ErrorScreenDescription","error","StyledMoviesList","MoviesListItem","Link","MoviesPoster","MoviesTitle","movies","location","useLocation","map","id","poster_path","title","original_title","state","from","to","src","require","loading","alt","StyledSection","Section","props","children","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","setError","useEffect","fetchTrendingMovies","getTrendingMovies","data","toast","theme","console","log","length","API_KEY","axios","response","results","getMovieInfo","movieId","getMovieCast","cast","getMovieReviews","getSearchedMovies","query"],"sourceRoot":""}