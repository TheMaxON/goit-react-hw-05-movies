{"version":3,"file":"static/js/34.d3abf8d4.chunk.js","mappings":"qLAEaA,E,QAAgBC,EAAAA,QAAH,oE,SCAbC,EAAU,SAAAC,GACrB,OAAO,SAACH,EAAD,UAAgBG,EAAMC,UAC9B,C,kMCDYC,EAAmBJ,EAAAA,EAAAA,IAAH,2FAMhBK,EAAcL,EAAAA,EAAAA,IAAH,gDAIXM,EAAeN,EAAAA,EAAAA,IAAH,4FAMZO,EAAaP,EAAAA,EAAAA,GAAH,4CAIVQ,EAAOR,EAAAA,EAAAA,EAAH,iJAOJS,EAAyBT,EAAAA,EAAAA,IAAH,gbAqBtBU,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,yK,4BCSvB,EA5CkB,SAAC,GAA2B,IAAD,IAAxBY,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAEtBC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAC9CC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnD,OACE,iCACE,SAACvB,EAAA,EAAD,WACE,SAACS,EAAD,CAAYe,GAAIJ,EAAYK,QAA5B,+BAEF,UAACzB,EAAA,EAAD,YACIW,IAAa,uCACdA,IACC,UAACR,EAAD,WACGU,IACC,SAACT,EAAD,CAAasB,IAdD,mCAcwBb,EAAac,IAAKb,KAExD,UAACT,EAAD,YACE,SAACuB,EAAA,EAAD,CAAWd,MAAOA,KAClB,UAACP,EAAD,0BAAmBsB,KAAKC,MAAqB,GAAff,GAAqB,OACnD,SAACT,EAAD,wBACA,SAACC,EAAD,UAAOS,KACP,SAACV,EAAD,sBACA,SAACC,EAAD,UACGU,GAAUA,EAAOc,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAGpD,UAAC1B,EAAD,YACE,UAACF,EAAD,6BACgB,uBAAIQ,QAEpB,UAAC,KAAD,YACE,SAAC,KAAD,CAAeU,GAAG,OAAlB,mBACA,SAAC,KAAD,CAAeA,GAAG,UAAlB,yBAEF,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,SAA4CxB,eAOzD,E,UCzBD,EA3BqB,WACnB,IAAQyB,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAO5B,EAAP,KAAkB6B,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAaN,GAFb,OAEbO,EAFa,OAGnBJ,EAAaI,GAHM,gDAKnBC,QAAQC,IAAR,MALmB,yDAAH,qDASpB,OACE,iCACInC,IAAa,SAACoC,EAAA,EAAD,KACf,SAAC,EAAD,CAAWpC,UAAWA,EAAWC,QAAQ,SAAC,KAAD,QAG9C,C","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/MoviePage/MoviePage.styled.jsx","components/MoviePage/MoviePage.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n  width: 90%;\n  margin: 0 auto 30px auto;\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection>{props.children}</StyledSection>;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieInfoSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 50px;\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 10px;\n`;\n\nexport const MovieDetails = styled.div`\n  width: 1200px;\n  color: var(--color-text);\n  overflow: hidden;\n`;\n\nexport const Subheading = styled.h2`\n  font-size: 37px;\n`;\n\nexport const Text = styled.p`\n  margin: 15px 0;\n  font-size: 18px;\n  padding: 8px 10px 15px 10px;\n  border-bottom: 2px solid var(--color-primary);\n`;\n\nexport const MovieAdditionalDetails = styled.div`\n  width: 700px;\n  height: 600px;\n  overflow: hidden auto;\n  padding: 20px;\n  border-radius: 15px;\n  background-color: var(--color-secondary);\n  color: var(--color-text);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n\n  ::-webkit-scrollbar {\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-accent);\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  color: var(--color-text);\n  text-decoration: none;\n  background-color: var(--color-primary);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n","import { Suspense, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { Section } from 'components/Section/Section';\nimport {\n  MovieInfoSection,\n  MoviePoster,\n  MovieDetails,\n  Subheading,\n  Text,\n  MovieAdditionalDetails,\n  BackButton,\n} from './MoviePage.styled';\nimport PageTitle from 'components/PageTitle/PageTitle';\nimport { StyledNav, StyledNavLink } from '../Header/Header.styled';\n\nconst MoviePage = ({ movieInfo, Outlet }) => {\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w400/';\n  const { poster_path, title, vote_average, overview, genres } = movieInfo;\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  return (\n    <>\n      <Section>\n        <BackButton to={backLinkRef.current}>â¨ž Go back</BackButton>\n      </Section>\n      <Section>\n        {!movieInfo && <h1>Loading...</h1>}\n        {movieInfo && (\n          <MovieInfoSection>\n            {poster_path && (\n              <MoviePoster src={IMAGES_BASE_URL + poster_path} alt={title} />\n            )}\n            <MovieDetails>\n              <PageTitle title={title} />\n              <Text>User score: {Math.round(vote_average * 10) / 10}</Text>\n              <Subheading>Overview</Subheading>\n              <Text>{overview}</Text>\n              <Subheading>Genres</Subheading>\n              <Text>\n                {genres && genres.map(genre => genre.name).join(', ')}\n              </Text>\n            </MovieDetails>\n            <MovieAdditionalDetails>\n              <Subheading>\n                Details about <i>{title}</i>\n              </Subheading>\n              <StyledNav>\n                <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n                <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n              </StyledNav>\n              <Suspense fallback={<div>Loading...</div>}>{Outlet}</Suspense>\n            </MovieAdditionalDetails>\n          </MovieInfoSection>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default MoviePage;\n\nMoviePage.propTypes = {\n  movieInfo: PropTypes.object,\n  Outlet: PropTypes.element,\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieInfo } from '../services/api';\nimport MoviePage from 'components/MoviePage/MoviePage';\nimport Loader from '../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieInfo, setMovieInfo] = useState({});\n\n  useEffect(() => {\n    fetchMovieInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchMovieInfo = async () => {\n    try {\n      const data = await getMovieInfo(movieId);\n      setMovieInfo(data);\n    } catch (fetchError) {\n      console.log(fetchError);\n    }\n  };\n\n  return (\n    <>\n      {!movieInfo && <Loader />}\n      <MoviePage movieInfo={movieInfo} Outlet={<Outlet />} />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledSection","styled","Section","props","children","MovieInfoSection","MoviePoster","MovieDetails","Subheading","Text","MovieAdditionalDetails","BackButton","Link","movieInfo","Outlet","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkRef","useRef","state","from","to","current","src","alt","PageTitle","Math","round","map","genre","name","join","Suspense","fallback","movieId","useParams","useState","setMovieInfo","useEffect","fetchMovieInfo","getMovieInfo","data","console","log","Loader"],"sourceRoot":""}