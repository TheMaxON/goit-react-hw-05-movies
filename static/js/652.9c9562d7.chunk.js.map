{"version":3,"file":"static/js/652.9c9562d7.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 30px;\n  margin-top: 140px;\n`;\n\nexport const MoviesListItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  text-decoration: none;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const MoviesPoster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MoviesTitle = styled.h2`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  color: var(--color-text);\n  padding: 20px;\n  background-color: #01000adb;\n  backdrop-filter: blur(15px);\n`;\n","import { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport {\n  StyledMoviesList,\n  MoviesListItem,\n  MoviesPoster,\n  MoviesTitle,\n} from './MoviesList.styled';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledMoviesList>\n      {movies.map(({ id, poster_path, title }) => (\n        <MoviesListItem\n          key={id}\n          state={{ from: location }}\n          to={`/movies/${id}`}\n        >\n          {poster_path && (\n            <MoviesPoster\n              src={IMAGES_BASE_URL + poster_path}\n              loading=\"lazy\"\n              alt={title}\n            />\n          )}\n          {<MoviesTitle>{title}</MoviesTitle>}\n        </MoviesListItem>\n      ))}\n    </StyledMoviesList>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n  width: 90%;\n  margin: 0 auto 30px auto;\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection>{props.children}</StyledSection>;\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, 0);\n  border-radius: 50px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  width: 55px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: none;\n  outline: none;\n  background-color: var(--color-accent);\n  color: var(--color-text);\n  border-radius: 50px;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  width: 700px;\n  border: none;\n  outline: none;\n  padding: 15px 15px 15px 65px;\n  background-color: var(--color-primary);\n  font-size: 20px;\n  color: var(--color-text);\n`;\n","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport { Form, Button, Input } from './Search.styled';\n\nconst Search = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizedQuery = query.toLowerCase().trim();\n\n    if (normalizedQuery === '') {\n      return toast.info(\"Please enter the movie you're looking for\", {\n        theme: 'dark',\n      });\n    }\n    onSubmit(normalizedQuery);\n    setQuery('');\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Button type=\"submit\" aria-label=\"Search\" className=\"button\">\n        <BiSearchAlt2 style={{ width: 25, height: 25 }} />\n      </Button>\n\n      <Input\n        className=\"input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies...\"\n        value={query}\n        onChange={handleChange}\n      />\n    </Form>\n  );\n};\n\nexport default Search;\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Section } from 'components/Section/Section';\nimport PageTitle from '../components/PageTitle/PageTitle';\nimport Search from '../components/Search/Search';\nimport { getSearchedMovies } from '../services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isFirstRender = useRef(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (isFirstRender.current || searchQuery === '') {\n      isFirstRender.current = false;\n      return;\n    }\n\n    setSearchParams({ query: searchQuery });\n    fetchSearchedMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQuery]);\n\n  useEffect(() => {\n    query && setSearchQuery(query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  const onSumbit = query => {\n    setSearchQuery(query);\n  };\n\n  const fetchSearchedMovies = async () => {\n    try {\n      setIsLoading(true);\n      const data = await getSearchedMovies(searchQuery);\n      setSearchedMovies(data);\n      setIsLoading(false);\n      if (data.length === 0) {\n        return toast.info('No movies found', {\n          theme: 'dark',\n        });\n      }\n    } catch (fetchError) {\n      console.log(fetchError);\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <PageTitle title=\"Search Movies\" />\n      </Section>\n      <Section>\n        <Search onSubmit={onSumbit} />\n      </Section>\n      <Section>\n        {isLoading && <Loader />}\n        {searchedMovies.length > 0 && <MoviesList movies={searchedMovies} />}\n        {!searchedMovies && <h2>No movies found</h2>}\n      </Section>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledMoviesList","styled","MoviesListItem","Link","MoviesPoster","MoviesTitle","movies","location","useLocation","map","id","poster_path","title","state","from","to","src","loading","alt","StyledSection","Section","props","children","Form","Button","Input","onSubmit","useState","query","setQuery","event","preventDefault","normalizedQuery","toLowerCase","trim","toast","theme","type","className","style","width","height","autoComplete","autoFocus","placeholder","value","onChange","e","target","searchQuery","setSearchQuery","searchedMovies","setSearchedMovies","isLoading","setIsLoading","isFirstRender","useRef","useSearchParams","searchParams","setSearchParams","get","useEffect","current","fetchSearchedMovies","getSearchedMovies","data","length","console","log","PageTitle","Loader","MoviesList"],"sourceRoot":""}