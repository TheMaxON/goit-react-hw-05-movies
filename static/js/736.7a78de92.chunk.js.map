{"version":3,"file":"static/js/736.7a78de92.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ErrorScreen/ErrorScreen.styled.jsx","components/ErrorScreen/ErrorScreen.jsx","components/Loader/SmallLoader.styled.jsx","components/Loader/SmallLoader.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastMemberWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n\n  @media (min-width: 1000px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (min-width: 1400px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const CastMember = styled.div`\n  background-color: var(--color-primary);\n  border-radius: 10px;\n  position: relative;\n`;\n\nexport const CastMemberPhoto = styled.img`\n  width: 100%;\n  border-radius: 10px;\n`;\n\nexport const CastMemberInfo = styled.div`\n  width: 100%;\n  padding: 5px;\n  position: absolute;\n  bottom: 0;\n  background-color: #01000adb;\n  backdrop-filter: blur(15px);\n`;\n\nexport const CastMemberName = styled.h2`\n  font-size: 15px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const CastMemberRole = styled.p`\n  font-size: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieCast } from '../../services/api';\nimport {\n  CastMemberWrapper,\n  CastMember,\n  CastMemberPhoto,\n  CastMemberInfo,\n  CastMemberName,\n  CastMemberRole,\n} from './Cast.styled';\nimport SmallLoader from '../Loader/SmallLoader';\nimport ErrorScreen from '../ErrorScreen/ErrorScreen';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieCast(movieId);\n        setMovieCast(data);\n      } catch (error) {\n        toast.error('The error has occured. Error info: ', error, {\n          theme: 'dark',\n        });\n        console.log(error);\n        return setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\n  return (\n    <CastMemberWrapper>\n      {isLoading && <SmallLoader />}\n      {!isLoading && movieCast.length === 0 && <p>No cast info yet.</p>}\n      {error && <ErrorScreen error={error} />}\n      {!isLoading &&\n        movieCast.length > 0 &&\n        !error &&\n        movieCast.map(({ cast_id, name, character, profile_path }) => (\n          <CastMember key={cast_id}>\n            <CastMemberPhoto\n              src={\n                profile_path\n                  ? IMAGES_BASE_URL + profile_path\n                  : require('../../media/no-image-placeholder.png')\n              }\n              loading=\"lazy\"\n              alt={name}\n            />\n\n            <CastMemberInfo>\n              <CastMemberName>{name}</CastMemberName>\n              <CastMemberRole>\n                {character ? `as ${character}` : ''}\n              </CastMemberRole>\n            </CastMemberInfo>\n          </CastMember>\n        ))}\n    </CastMemberWrapper>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const ErrorScreenStyled = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ErrorScreenHeading = styled.h1`\n  color: #d33a3a;\n`;\n\nexport const ErrorScreenDescription = styled.p`\n  color: white;\n`;\n","import {\n  ErrorScreenStyled,\n  ErrorScreenHeading,\n  ErrorScreenDescription,\n} from './ErrorScreen.styled';\n\nconst ErrorScreen = ({ error }) => {\n  return (\n    <ErrorScreenStyled>\n      <ErrorScreenHeading>\n        The error has occured. Please try reloading the page...\n      </ErrorScreenHeading>\n      <ErrorScreenDescription>Error info: {error}</ErrorScreenDescription>\n    </ErrorScreenStyled>\n  );\n};\n\nexport default ErrorScreen;\n","import styled from '@emotion/styled';\n\nexport const StyledLoaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: 20;\n`;\n","import { Bars } from 'react-loader-spinner';\nimport { StyledLoaderWrapper } from './SmallLoader.styled';\nimport PageTitle from '../PageTitle/PageTitle';\n\nconst SmallLoader = () => {\n  return (\n    <StyledLoaderWrapper>\n      <Bars\n        height=\"200\"\n        width=\"200\"\n        color=\"var(--color-accent)\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n      <PageTitle title=\"Loading...\" />\n    </StyledLoaderWrapper>\n  );\n};\n\nexport default SmallLoader;\n","import axios from 'axios';\n\nconst API_KEY = 'a686af912263638c370a0fbfc3731476';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["CastMemberWrapper","styled","CastMember","CastMemberPhoto","CastMemberInfo","CastMemberName","CastMemberRole","movieId","useParams","useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","useEffect","fetchMovieCast","getMovieCast","data","toast","theme","console","log","SmallLoader","length","ErrorScreen","map","cast_id","name","character","profile_path","src","require","loading","alt","ErrorScreenStyled","ErrorScreenHeading","ErrorScreenDescription","StyledLoaderWrapper","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","PageTitle","title","API_KEY","axios","getTrendingMovies","response","results","getMovieInfo","cast","getMovieReviews","getSearchedMovies","query"],"sourceRoot":""}